[{"/Users/dibs/Divya's projects/covid-19-tracker/src/index.js":"1","/Users/dibs/Divya's projects/covid-19-tracker/src/App.js":"2","/Users/dibs/Divya's projects/covid-19-tracker/src/reportWebVitals.js":"3","/Users/dibs/Divya's projects/covid-19-tracker/src/InfoBox.js":"4","/Users/dibs/Divya's projects/covid-19-tracker/src/Map.js":"5","/Users/dibs/Divya's projects/covid-19-tracker/src/Table.js":"6","/Users/dibs/Divya's projects/covid-19-tracker/src/util.js":"7","/Users/dibs/Divya's projects/covid-19-tracker/src/LineGraph.js":"8"},{"size":500,"mtime":1620792258000,"results":"9","hashOfConfig":"10"},{"size":3569,"mtime":1621409416000,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1620792258000,"results":"12","hashOfConfig":"10"},{"size":698,"mtime":1620805026000,"results":"13","hashOfConfig":"10"},{"size":626,"mtime":1621413581000,"results":"14","hashOfConfig":"10"},{"size":414,"mtime":1620819603000,"results":"15","hashOfConfig":"10"},{"size":1033,"mtime":1621413499000,"results":"16","hashOfConfig":"10"},{"size":2202,"mtime":1620999970000,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"111v10n",{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"/Users/dibs/Divya's projects/covid-19-tracker/src/index.js",[],["37","38"],"/Users/dibs/Divya's projects/covid-19-tracker/src/App.js",["39","40"],"\nimport { Card, CardContent, FormControl, MenuItem, Select, Button } from '@material-ui/core';\nimport './App.css';\nimport React,{ useState, useEffect } from \"react\";\nimport InfoBox from \"./InfoBox\"\nimport Map from \"./Map\"\nimport Table from \"./Table\"\nimport LineGraph from \"./LineGraph\"\nimport { sortData } from \"./util\"\nimport \"leaflet/dist/leaflet.css\";\n\nfunction App() {\n\n  const [countries, setCountries] = useState([]);\n  const [country, setCountry] = useState('worldwide');\n  const [countryInfo, setCountryInfo] = useState({});\n  const [tableData, setTableData] = useState([]);\n  const [mapCenter, setMapCenter] = useState([0, 0]);\n  const [mapZoom, setMapZoom] = useState(3);\n  const [mapCountries, setMapCountries] = useState([]);\n  const [cases, setCases] = useState('4347');\n\n  useEffect(()=> {\n    fetch('https://disease.sh/v3/covid-19/all')\n    .then((res)=> res.json())\n    .then((data) => {\n      setCountryInfo(data);\n    });\n  },[])\n  \n  useEffect(() => {\n    const getCountriesData = async () => {\n      fetch(\"https://disease.sh/v3/covid-19/countries\")\n        .then((response) => response.json())\n        .then((data) => {\n          const countries = data.map((country) => ({\n            name: country.country,\n            value: country.countryInfo.iso2,\n          }));\n          let sortedData = sortData(data);\n          setCountries(countries);\n          setMapCountries(data);\n          setTableData(sortedData);\n          setMapCountries(data);\n        });\n    };\n\n    getCountriesData();\n  }, []);\n\n\n  const onCountryChange = async (e) => {\n    const countryCode = e.target.value;\n    const url =\n      countryCode === \"worldwide\"\n        ? \"https://disease.sh/v3/covid-19/all\"\n        : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\n    await fetch(url)\n      .then((response) => response.json())\n      .then((data) => {\n        setCountry(countryCode);\n        setCountryInfo(data);\n        setMapCenter([-27, 133]);\n        console.log('mapCenter')\n        console.log(mapCenter)\n        // {lat: data.countryInfo.lat, lng: data.countryInfo.long}\n        setMapZoom(4);\n        setCases(0);\n      });\n  };\n  console.log('mapCenter2')\n        console.log(mapCenter)\n  console.log(\"country>>>\", countryInfo);\n\n\n\n\n  return (\n    <div className=\"app\">\n      <div className=\"app_left\">\n      <div className=\"app_header\">\n      <h1>COVID-19 TRACKER</h1>\n        <FormControl className=\"app_dropdown\">\n          <Select \n            variant=\"outlined\"\n            onChange={onCountryChange}\n            value={country}\n          >\n          <MenuItem value = \"worldwide\" >Worldwide</MenuItem>\n            {countries.map((country) => (\n                <MenuItem value={country.value}>{country.name}</MenuItem>\n              ))}\n          </Select>\n        </FormControl>\n      </div>\n      <div className=\"app_stats\">\n        <InfoBox title=\"Coronavirus cases\" cases={countryInfo.todayCases} total={cases}/>\n\n        <InfoBox title=\"Recovered\" cases={countryInfo.todayRecovered} total={countryInfo.recovered}/>\n\n        <InfoBox title=\"Deaths\" cases={countryInfo.todayDeaths} total={countryInfo.deaths}/>\n      </div>\n      <Map\n          // countries={mapCountries}\n          center={mapCenter}\n          zoom={mapZoom}\n        />\n      </div>\n      <Card className=\"app_right\">\n        <CardContent>\n          \n          <h3>Live Cases by Country</h3>\n          <Table countries={tableData} />\n          <h3>Worldwide New Cases</h3>\n          <LineGraph />\n        </CardContent>\n      </Card>\n\n    </div>\n  );\n}\n\nexport default App;\n","/Users/dibs/Divya's projects/covid-19-tracker/src/reportWebVitals.js",[],"/Users/dibs/Divya's projects/covid-19-tracker/src/InfoBox.js",[],"/Users/dibs/Divya's projects/covid-19-tracker/src/Map.js",[],"/Users/dibs/Divya's projects/covid-19-tracker/src/Table.js",[],"/Users/dibs/Divya's projects/covid-19-tracker/src/util.js",["41","42","43"],"import React from \"react\";\nimport numeral from \"numeral\";\n// import { Circle, Popup } from 'react-leaflet';\n\nconst casesTypeColors = {\n    cases: {\n      hex: \"#CC1034\",\n      rgb: \"rgb(204, 16, 52)\",\n    //   half_op: \"rgba(204, 16, 52, 0.5)\",\n      multiplier: 800,\n    },\n    recovered: {\n      hex: \"#7dd71d\",\n      rgb: \"rgb(125, 215, 29)\",\n    //   half_op: \"rgba(125, 215, 29, 0.5)\",\n      multiplier: 1200,\n    },\n    deaths: {\n      hex: \"#fb4443\",\n      rgb: \"rgb(251, 68, 67)\",\n    //   half_op: \"rgba(251, 68, 67, 0.5)\",\n      multiplier: 2000,\n    },\n  };\n\n\nexport const sortData= (data) => {\n    const sortedData=[...data];\n\n    return sortedData.sort((a,b) => (a.cases > b.cases ? -1 : 1));\n    \n};\n\n//Draw circles on the map with interactive tooltip\n// export const showDataOnMap = (data, casesType='cases') => (\n//     data.map((country) => ( \n//         <Circle\n//         center={[country.countryInfo.lat, country.countryInfo.long]}\n//         fillOpacity={0.4}\n\n//         >\n\n//         </Circle>\n//     ))\n// )\n\n","/Users/dibs/Divya's projects/covid-19-tracker/src/LineGraph.js",[],{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":2,"column":60,"nodeType":"50","messageId":"51","endLine":2,"endColumn":66},{"ruleId":"48","severity":1,"message":"52","line":20,"column":10,"nodeType":"50","messageId":"51","endLine":20,"endColumn":22},{"ruleId":"48","severity":1,"message":"53","line":1,"column":8,"nodeType":"50","messageId":"51","endLine":1,"endColumn":13},{"ruleId":"48","severity":1,"message":"54","line":2,"column":8,"nodeType":"50","messageId":"51","endLine":2,"endColumn":15},{"ruleId":"48","severity":1,"message":"55","line":5,"column":7,"nodeType":"50","messageId":"51","endLine":5,"endColumn":22},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'mapCountries' is assigned a value but never used.","'React' is defined but never used.","'numeral' is defined but never used.","'casesTypeColors' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]